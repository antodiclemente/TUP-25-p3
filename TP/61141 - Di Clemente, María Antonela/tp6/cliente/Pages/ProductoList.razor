@using cliente.Services
@using cliente.Models
@inject ApiService ApiService
@inject CarritoService CarritoService
@inject NavigationManager Navigation
@page "/productos"
@using Microsoft.AspNetCore.WebUtilities

<h1 class="barra-superior">
    <img src="img/logo.jpg" alt="Aura" style="height: 50px; margin-right: 20px;" />
    <div style="flex-grow:1; font-size: 1.5rem; font-weight: bold;">Aura</div>
    <button class="boton-principal" @onclick="@(() => Navigation.NavigateTo("/productos/nuevo"))">Agregar producto</button>  <!-- Navega al formulario -->
    <button class="boton-principal" @onclick="IrCarrito">Carrito</button>   <!-- Navega al carrito -->
    <button class="boton-principal" @onclick="Buscar">Buscar</button>   <!-- Navega a la busqueda -->
</h1>


@if (cargando)
{
    <p>Cargando productos...</p>
}
else if (productos != null && productos.Any())
{
    <div class="grid-productos">
        @foreach (var producto in productos)
        {
            <div class="tarjeta-producto">
                <img src="@producto.ImagenUrl" alt="@producto.Nombre" />
                <h4>@producto.Nombre</h4>
                <p class="descripcion">@producto.Descripcion</p>
                <p>@producto.Precio.ToString("C")</p>
                <button class="btn-dorado" @onclick="() => AgregarAlCarrito(producto)">Agregar al carrito</button>
                <div style="margin-top:15px; display:flex; justify-content:center; gap: 12px;">
                    <button class="btn-editar" @onclick="() => EditarProducto(producto.Id)">Editar</button>
                    <button class="btn-eliminar" @onclick="() => EliminarProducto(producto.Id)">Eliminar</button>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No hay productos disponibles.</p>
}

@if (mostrarMensaje)
{
    <div class="mensaje-compra">
        ¡Compra realizada con éxito!
    </div>
}

@code {
    private List<Producto> productos;
    private bool cargando = true;

    protected override async Task OnInitializedAsync()
    {
        await CargarProductos();
    }

    private async Task CargarProductos()
    {
        cargando = true;
        productos = await ApiService.ObtenerProductosAsync();
        cargando = false;
    }

    private void AgregarAlCarrito(Producto producto)
    {
        CarritoService.AgregarProducto(producto);
    }

    private void EditarProducto(int id)
    {
        Navigation.NavigateTo($"/productos/editar/{id}");
    }

    private async Task EliminarProducto(int id)
    {
        var exito = await ApiService.EliminarProductoAsync(id);
        if (exito)
        {
            await CargarProductos();
        }
    }

    private void IrCarrito()
    {
        Navigation.NavigateTo("/carrito");
    }

    private void Buscar()
    {
        Navigation.NavigateTo("/productos/buscar");
    }
    private bool mostrarMensaje = false;

    protected override void OnInitialized()
    {
    var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
    if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("compraExitosa", out var valor))
    {
        mostrarMensaje = valor == "true";
    }
}

}
