@page "/productos/buscar"
@using cliente.Services
@using cliente.Models
@inject ApiService ApiService
@inject NavigationManager Navigation


  <!-- Título y botón para volver al listado -->
<h1 class="barra-superior">
    <div style="flex-grow:1; font-size: 1.5rem; font-weight: bold;">Buscar Productos</div>
    <button class="boton-principal" @onclick="Volver">Volver</button>
</h1>


<!-- Campo de texto para buscar por nombre -->
<input @bind="terminoBusqueda" placeholder="Buscar por nombre..." class="form-control mb-3" />
<button class="btn btn-dark" @onclick="Buscar">Buscar</button>


<!-- Muestra los productos encontrados en forma de grilla -->
@if (resultados != null && resultados.Any())
{
    <div class="grid-productos">
        @foreach (var p in resultados)
        {
            <div class="tarjeta-producto">
                <img src="@p.ImagenUrl" alt="@p.Nombre" />
                <h4>@p.Nombre</h4>
                <p class="descripcion">@p.Descripcion</p>
                <p>@p.Precio.ToString("C")</p>
                <button class="btn-dorado" @onclick="() => AgregarAlCarrito(p)">Agregar al carrito</button>
                <div style="margin-top:15px; display:flex; justify-content:center; gap: 12px;">
                    <button class="btn-editar" @onclick="() => EditarProducto(p.Id)">Editar</button>
                    <button class="btn-eliminar" @onclick="() => EliminarProducto(p.Id)">Eliminar</button>
                </div>
            </div>
        }
    </div>
}
else if (resultados != null)
{
    <p>No se encontraron productos.</p>
}

@code {
    private string terminoBusqueda;
    private List<Producto> resultados;

  // Filtra productos por nombre usando la API
    private async Task Buscar()
    {
        var todos = await ApiService.ObtenerProductosAsync();
        resultados = todos
            .Where(p => p.Nombre.Contains(terminoBusqueda, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }


    // Navega a la página principal de productos
    private void Volver()
    {
        Navigation.NavigateTo("/productos");
    }

    [Inject] private CarritoService CarritoService { get; set; }


    // Agrega el producto seleccionado al carrito
    private void AgregarAlCarrito(Producto producto)
    {
      CarritoService.AgregarProducto(producto);
    }

    // Navega a la pantalla de edición del producto
    private void EditarProducto(int id)
    {
        Navigation.NavigateTo($"/productos/editar/{id}");
    }

        // Llama a la API para eliminar un producto y vuelve a buscar
    private async Task EliminarProducto(int id)
    {
        var exito = await ApiService.EliminarProductoAsync(id);
        if (exito)
        {
            await Buscar(); 
        }
}

}


